// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  email     String   @unique(map: "email") @db.VarChar(255)
  password  String?  @db.VarChar(255)
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0)
}

model Pivot {
  id          Int     @id @default(autoincrement())
  term_id     Int     @unique
  category_id Int
  product     Product @relation(fields: [term_id], references: [id], onDelete: Cascade)
}

model Price {
  id      Int     @id @default(autoincrement())
  term_id Int     @unique
  price   Int
  product Product @relation(fields: [term_id], references: [id], onDelete: Cascade)
}

model Preview {
  id      Int     @id @default(autoincrement())
  term_id Int     @unique
  type    String  @default("preview") @db.VarChar(10)
  content String  @db.VarChar(255)
  product Product @relation(fields: [term_id], references: [id], onDelete: Cascade)
}

model Stock {
  id      Int     @id @default(autoincrement())
  term_id Int     @unique
  stock   Int     @default(0)
  product Product @relation(fields: [term_id], references: [id], onDelete: Cascade)
}

model Product {
  id          Int     @id @default(autoincrement())
  category_id Int     
  title       String  @db.VarChar(255)
  slug        String? @db.VarChar(25)
  lang        String  @default("en")
  auth_id     Int
  status      Boolean @default(true)
  type        Int     @default(6)
  count       Int     @default(0)

  stock Stock[]

  price Price[]

  pivot Pivot[]

  preview Preview[]

  products Product_category @relation(fields: [category_id], references: [id])
}

model Product_category {
  id        Int      @id @default(autoincrement())
  name      String
  user_id   Int
  createdAt DateTime @default(now()) @db.Timestamp(0)

  products Product[]
}



model Emoji {
  id        Int      @id @default(autoincrement())
  name      String
  score     Int
  emotion   String
  createdAt DateTime @default(now()) @db.Date
}
